shiny::runApp('GAReport')
clients <- read.csv("data/client_keys_2018_07_10.csv",
header = TRUE)
shiny::runApp('app')
runApp('app')
runApp('app')
?actionButton
runApp('app')
runApp('app')
runApp('app')
?icon
runApp('app')
x <- data.frame(sw_green = "#81bc00", )
x <- data.frame(sw_green = "#81bc00", sw_purple = "#410099")
x
x$sw_purple
x$sw_purple[1]
colors <- data.frame(sw_green <- "#81bc00",
sw_purple <- "#410099")
colors <- data.frame(sw_green = "#81bc00",
sw_purple = "#410099")
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
shiny::runApp('app')
3820*.25
runApp('app')
runApp('app')
getwd()
library(googleAnalyticsR)
library(jsonlite)
library(dplyr)
client_id <- fromJSON("app/client_id.json", flatten = TRUE)
client_id <- fromJSON("/app/client_id.json", flatten = TRUE)
client_id <- fromJSON("/app/client_id.json", flatten = TRUE)
client_id <- fromJSON("app/client_id.json", flatten = TRUE)
client_id
options(googleAuthR.client_id = client_id$installed$client_id)
options(googleAuthR.client_secret = client_id$installed$client_secret)
account_list <- ga_account_list()
account_list <- ga_account_list()
ga_id <-
account_list %>%
filter(accountName == "SWP" &
webPropertyName == "SWP v5" &
viewName == "Filtered View") %>%
select(viewId)
client <- dim_filter("customVarValue1", "EXACT", "1504", not = FALSE)
fc <- filter_clause_ga4(list(client), operator = "AND")
sess_dims <- c("customVarValue1", "city",  "dateHour")#, "pagePath")#, "dayOfWeekName", "pagePath")
sess_mets <- c("users", "newUsers", "entrances", "sessions", "sessionsPerUser",
"avgSessionDuration", "uniquePageViews")
start_date <- "2017-06-30"
end_date <- Sys.Date() %>% as.character()
google_analytics(ga_id,
date_range = c(start_date, end_date),
dimensions = sess_dims,
metrics = sess_mets,
dim_filters = fc,
max = -1)
google_analytics(ga_id,
date_range = c(start_date, end_date),
dimensions = sess_dims,
metrics = sess_mets,
dim_filters = fc,
max = -1) %>%
saveRDS("data/raw/test_client_ga_data.rds")
google_analytics(ga_id,
date_range = c(start_date, end_date),
dimensions = sess_dims,
metrics = sess_mets,
dim_filters = fc,
max = -1) %>%
readRDS("data/raw/test_client_ga_data.rds") %>%
rename(client_key = customVarValue1) %>%
mutate(client_key = client_key %>% as.numeric(),
date = substr(dateHour, 1, 8) %>% as.Date(format = "%Y%m%d"),
hour = substr(dateHour, 9, 10) %>% as.numeric(),
city = ifelse(city == "(not set)", "NA", city),
avg_session_duration_min = avgSessionDuration/60,
day_of_week = strftime(date, "%A"),
day_of_week = factor(day_of_week, levels = c("Monday", "Tuesday", "Wednesday",
"Thursday", "Friday", "Saturday",
"Sunday")),
existing_users = users - newUsers)
google_analytics(ga_id,
date_range = c(start_date, end_date),
dimensions = sess_dims,
metrics = sess_mets,
dim_filters = fc,
max = -1) %>%
rename(client_key = customVarValue1) %>%
mutate(client_key = client_key %>% as.numeric(),
date = substr(dateHour, 1, 8) %>% as.Date(format = "%Y%m%d"),
hour = substr(dateHour, 9, 10) %>% as.numeric(),
city = ifelse(city == "(not set)", "NA", city),
avg_session_duration_min = avgSessionDuration/60,
day_of_week = strftime(date, "%A"),
day_of_week = factor(day_of_week, levels = c("Monday", "Tuesday", "Wednesday",
"Thursday", "Friday", "Saturday",
"Sunday")),
existing_users = users - newUsers)
source('C:/Users/sranney/Repositories/GoogleAnalyticsReport/app/R/data_access.R')
get_google_analytics_data("1504", "2017-06-30", Sys.Date())
Sys.Date()
get_google_analytics_data("1504", "2017-06-30", Sys.Date() %>% as.character())
source('C:/Users/sranney/Repositories/GoogleAnalyticsReport/app/R/data_access.R')
?downloadButton
runApp('app')
runApp('app')
?onClick
?downloadHandler
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
shiny::runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
paste0(input$client, "_", Sys.Date() %>% as.character(), ".pdf")
file.path(tempdir(), "report.Rmd")
?file.copy
?render
runApp('app')
runApp('app')
?downloadHandler
runApp('app')
??getSymbols
library(quantmod)
install.packages("quantmod")
library(quantmod)
?getSymbols("TSLA", src = "google", from = "2018-01-01", Sys.Date() %>% as.character(), auto.assign = FALSE)
x <- getSymbols("TSLA", src = "google", from = "2018-01-01", Sys.Date() %>% as.character(), auto.assign = FALSE)
x <- getSymbols("TSLA", src = "yahoo", from = "2018-01-01", Sys.Date() %>% as.character(), auto.assign = FALSE)
x
head(x)
runApp('app')
?downloadHandler
runApp('app')
runApp('app')
getwd()
source('C:/Users/sranney/Repositories/GoogleAnalyticsReport/app/R/get_google_analytics_data.R')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
clients <- read.csv("data/client_keys_2018_07_10.csv",
header = TRUE)
clients <- read.csv("app/data/client_keys_2018_07_10.csv",
header = TRUE)
runApp('app')
clients %>% filter(client_name == "Ace Hardware Corporation")
clients %>% filter(client_name == "Ace Hardware Corporation") %>% select(ï..client_key) %>% unique()
client)_code <- clients %>% filter(client_name == "Ace Hardware Corporation") %>% select(ï..client_key) %>% unique()
client_code <- clients %>% filter(client_name == "Ace Hardware Corporation") %>% select(ï..client_key) %>% unique()
client_code
client_code <- clients %>% filter(client_name == "Ace Hardware Corporation") %>% select(ï..client_key) %>% unique() %>% head()
client_code
client_code <- clients %>% filter(client_name == "Ace Hardware Corporation") %>% select(ï..client_key) %>% unique() %>% head()[1]
client_code <- clients %>% filter(client_name == "Ace Hardware Corporation") %>% select(ï..client_key) %>% unique()
runApp('app')
runApp('app')
runApp('app')
client_code <- (clients %>% filter(client_name == "Ace Hardware Corporation") %>% select(ï..client_key) %>% unique())$ï..client_key
client_code
runApp('app')
?dim_filter
source('C:/Users/sranney/Repositories/GoogleAnalyticsReport/app/R/get_google_analytics_data.R')
getwd()
runApp('app')
runApp('app')
?with_shiny
library(googleAuthR)
runApp('app')
?googleAuthUI()
runApp('app')
runApp('app')
?with_shiny
?google_analytics_3
?callModule
?googleAuth
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
View(client_code)
View(client_code)
runApp('app')
runApp('app')
runApp('app')
runApp('app')
function(){dim_filter("customVarValue1", "EXACT", client_code(), not = FALSE)}
function(){dim_filter("customVarValue1", "EXACT", client_code(), not = FALSE)}
Q
runApp('app')
runApp('app')
runApp('app')
?with_shiny
runApp('app')
?googleAuthUI
runApp('app')
runApp('app')
setwd("app")
getwd()
gar_auth_service(
json_file = "ranney-sw-test-2018-06-22-ccfcdd77f262.json",
scope = "https://www.googleapis.com/auth/analytics"
)
library(shiny)
library(googleAuthR)
gar_auth_service(
json_file = "ranney-sw-test-2018-06-22-ccfcdd77f262.json",
scope = "https://www.googleapis.com/auth/analytics"
)
runApp()
runApp()
client_id <- fromJSON("client_id.json")
library(jsonlite)
client_id <- fromJSON("client_id.json")
client_id
runApp()
?google_analytics
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?downloadHandler
shiny::runApp('app')
runApp('app')
runApp('app')
?render
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
?google_analytics
?filter_clause_ga4
?inheritcs
?inherits
runApp('app')
?dim_filter
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
?left_join
runApp('app')
runApp('app')
runApp('app')
runApp('app')
read.csv("app/data/client_keys_2018-07-10.csv", header = TRUE)
getwd()
read.csv("app/data/client_keys_2018_07_10.csv", header = TRUE)
n <- read.csv("app/data/client_keys_2018_07_10.csv", header = TRUE)
names(n)
n <- read.csv("app/data/client_keys_2018_07_10.csv", header = TRUE, fileEncoding="UTF-8-BOM")
names(n)
runApp('app')
runApp('app')
runApp('app')
runApp('app')
install.packages("tinytex")
library(tinytex)
runApp('app')
?render
runApp('app')
runApp('app')
?render
runApp('app')
?rmarkdown::render
shiny::runApp('app')
runApp('app')
source('C:/Users/sranney/Repositories/staywelldocs/R/hello.R')
hello()
?rmarkdown::render()
runApp('app')
runApp('app')
shiny::runApp('app')
runApp('app')
runApp('app')
runApp('app')
?withProgress
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
shiny::runApp('app')
runApp('app')
?withProgress
if (interactive()) {
ui <- fluidPage(
plotOutput("plot")
)
server <- function(input, output, session) {
output$plot <- renderPlot({
progress <- Progress$new(session, min=1, max=15)
on.exit(progress$close())
progress$set(message = 'Calculation in progress',
detail = 'This may take a while...')
for (i in 1:15) {
progress$set(value = i)
Sys.sleep(0.5)
}
plot(cars)
})
}
shinyApp(ui, server)
}
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
shiny::runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
shiny::runApp('app')
shiny::runApp('app')
runApp('app')
shiny::runApp('app')
shiny::runApp('app')
version
shiny::runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
shiny::runApp('app')
installed.packages()
version()
version
session
session()
?session
sessionInfo
sessionInfo()
?tinytex
??tinytex
runApp('app')
?tinytex::tlmgr_install()
shiny::runApp('app')
texlive::tlmgr_install('beamer')
tinytex::tlmgr_install('beamer')
shiny::runApp('app')
15*5
version()
version
16.37+32.48+73.14+63.49
shiny::runApp('app')
runApp('app')
runApp('app')
shiny::runApp('app')
runApp('app')
?render
runApp('app')
?render
?render
?knit
?render
Sys.Date()
Sys.Date() %>% class()
paste0(Sys.Date(), ".pdf")
